services:
  # --- Eureka Service ---
  eureka-service:
    build: ./eureka-service
    container_name: eureka-service
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/eureka/apps" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Customer DB ---
  customer-db:
    image: postgres:17-alpine
    container_name: customer-db
    restart: always
    environment:
      POSTGRES_DB: customerdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - customer_data:/var/lib/postgresql/data

  # --- Customer Service ---
  customer-service:
      build: ./customer-service
      container_name: customer-service
      depends_on:
        - customer-db
        - eureka-service
      environment:
        SPRING_PROFILES_ACTIVE: prod
        DB_HOST: customer-db
        DB_NAME: customerdb
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
      ports:
        - "8080:8080"

  # --- Catalog DB ---
  catalog-db:
    image: postgres:17-alpine
    container_name: catalog-db
    restart: always
    environment:
      POSTGRES_DB: catalogdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - catalog_data:/var/lib/postgresql/data

  # --- Catalog Service ---
  catalog-service:
    build: ./catalog_service
    container_name: catalog-service
    depends_on:
      - catalog-db
      - eureka-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: catalog-db
      DB_NAME: catalogdb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8081:8080"

  # --- Inventory DB ---
  inventory-db:
    image: postgres:17-alpine
    container_name: inventory-db
    restart: always
    environment:
      POSTGRES_DB: inventorydb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - inventory_data:/var/lib/postgresql/data

  # --- Inventory Service ---
  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    depends_on:
      - inventory-db
      - eureka-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: inventory-db
      DB_NAME: inventorydb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8082:8080"

  # --- Order Service ---
#  order-db:
#    image: postgres:17-alpine
#    container_name: order-db
#    restart: always
#    environment:
#      POSTGRES_DB: orderdb
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#    ports:
#      - "5433:5432"
#    volumes:
#      - ./volumes/order-db:/var/lib/postgresql/data
#
#  order-service:
#    build: ./order-service
#    container_name: order-service
#    depends_on:
#      - order-db
#    environment:
#      SPRING_PROFILES_ACTIVE: prod
#      DB_HOST: order-db
#      DB_NAME: orderdb
#      DB_USER: ${DB_USER}
#      DB_PASSWORD: ${DB_PASSWORD}
#    ports:
#      - "8081:8080"


#  db_payment:
#    image: postgres:17-alpine
#    container_name: db_payment
#    restart: always
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: paymentdb
#    ports:
#      - "5437:5432"
#    volumes:
#      - db_payment_data:/var/lib/postgresql/data
#
#  db_notification:
#    image: postgres:17-alpine
#    container_name: db_notification
#    restart: always
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: notificationdb
#    ports:
#      - "5438:5432"
#    volumes:
#      - db_notification_data:/var/lib/postgresql/data

volumes:
  customer_data:
  catalog_data:
#  db_inventory_data:
#  db_order_data:
#  db_payment_data:
#  db_notification_data:




