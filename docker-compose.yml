services:
  # --- Eureka Service ---
  eureka-service:
    build: ./eureka-service
    container_name: eureka-service
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/eureka/apps" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Customer DB ---
  customer-db:
    image: postgres:17-alpine
    container_name: customer-db
    restart: always
    environment:
      POSTGRES_DB: customerdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - customer_data:/var/lib/postgresql/data

  # --- Customer Service ---
  customer-service:
      build: ./customer-service
      container_name: customer-service
      depends_on:
        - customer-db
        - eureka-service
      environment:
        SPRING_PROFILES_ACTIVE: prod
        DB_HOST: customer-db
        DB_NAME: customerdb
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
      ports:
        - "8080:8080"

  # --- Catalog DB ---
  catalog-db:
    image: postgres:17-alpine
    container_name: catalog-db
    restart: always
    environment:
      POSTGRES_DB: catalogdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - catalog_data:/var/lib/postgresql/data

  # --- Catalog Service ---
  catalog-service:
    build: ./catalog_service
    container_name: catalog-service
    depends_on:
      - catalog-db
      - eureka-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: catalog-db
      DB_NAME: catalogdb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8081:8080"

  # --- Inventory DB ---
  inventory-db:
    image: postgres:17-alpine
    container_name: inventory-db
    restart: always
    environment:
      POSTGRES_DB: inventorydb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - inventory_data:/var/lib/postgresql/data

  # --- Inventory Service ---
  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    depends_on:
      - inventory-db
      - eureka-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: inventory-db
      DB_NAME: inventorydb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8082:8080"

  # --- Order DB ---
  order-db:
    image: postgres:17-alpine
    container_name: order-db
    restart: always
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5436:5432"
    volumes:
      - order_data:/var/lib/postgresql/data

  # --- Order Service ---
  order-service:
    build: ./order-service
    container_name: order-service
    depends_on:
      - order-db
      - eureka-service
      - kafka-ui
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: order-db
      DB_NAME: orderdb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8083:8080"

  # --- Payment DB ---
  payment-db:
    image: postgres:17-alpine
    container_name: payment-db
    restart: always
    environment:
      POSTGRES_DB: paymentdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5437:5432"
    volumes:
      - payment_data:/var/lib/postgresql/data

  # --- Payment Service ---
  payment-service:
    build: ./payment-service
    container_name: payment-service
    depends_on:
      - payment-db
      - eureka-service
      - kafka-ui
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: payment-db
      DB_NAME: paymentdb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8084:8080"

  # --- Notification DB ---
  notification-db:
    image: postgres:17-alpine
    container_name: notification-db
    restart: always
    environment:
      POSTGRES_DB: notificationdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5438:5432"
    volumes:
      - notification_data:/var/lib/postgresql/data

  # --- Notification Service ---
  notification-service:
    build: ./notification-service
    container_name: notification-service
    depends_on:
      - notification-db
      - eureka-service
      - kafka-ui
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: notification-db
      DB_NAME: notificationdb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8085:8080"

  # --- Kafka Service ---
  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

volumes:
  customer_data:
  catalog_data:
  inventory_data:
  order_data:
  payment_data:
  notification_data:




